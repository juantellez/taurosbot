// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gdax.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
// = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SpreadPriceRequest struct {
	Market               string   `protobuf:"bytes,1,opt,name=Market,proto3" json:"Market,omitempty"`
	Side                 string   `protobuf:"bytes,2,opt,name=Side,proto3" json:"Side,omitempty"`
	Depth                string   `protobuf:"bytes,3,opt,name=Depth,proto3" json:"Depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpreadPriceRequest) Reset()         { *m = SpreadPriceRequest{} }
func (m *SpreadPriceRequest) String() string { return proto.CompactTextString(m) }
func (*SpreadPriceRequest) ProtoMessage()    {}
func (*SpreadPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa8a912ee610f1a, []int{0}
}

func (m *SpreadPriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpreadPriceRequest.Unmarshal(m, b)
}
func (m *SpreadPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpreadPriceRequest.Marshal(b, m, deterministic)
}
func (m *SpreadPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpreadPriceRequest.Merge(m, src)
}
func (m *SpreadPriceRequest) XXX_Size() int {
	return xxx_messageInfo_SpreadPriceRequest.Size(m)
}
func (m *SpreadPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpreadPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpreadPriceRequest proto.InternalMessageInfo

func (m *SpreadPriceRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *SpreadPriceRequest) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *SpreadPriceRequest) GetDepth() string {
	if m != nil {
		return m.Depth
	}
	return ""
}

type SpreadPrice struct {
	Market               string   `protobuf:"bytes,1,opt,name=Market,proto3" json:"Market,omitempty"`
	Price                string   `protobuf:"bytes,2,opt,name=Price,proto3" json:"Price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpreadPrice) Reset()         { *m = SpreadPrice{} }
func (m *SpreadPrice) String() string { return proto.CompactTextString(m) }
func (*SpreadPrice) ProtoMessage()    {}
func (*SpreadPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa8a912ee610f1a, []int{1}
}

func (m *SpreadPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpreadPrice.Unmarshal(m, b)
}
func (m *SpreadPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpreadPrice.Marshal(b, m, deterministic)
}
func (m *SpreadPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpreadPrice.Merge(m, src)
}
func (m *SpreadPrice) XXX_Size() int {
	return xxx_messageInfo_SpreadPrice.Size(m)
}
func (m *SpreadPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_SpreadPrice.DiscardUnknown(m)
}

var xxx_messageInfo_SpreadPrice proto.InternalMessageInfo

func (m *SpreadPrice) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *SpreadPrice) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

type TickerRequest struct {
	Market               string   `protobuf:"bytes,1,opt,name=Market,proto3" json:"Market,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TickerRequest) Reset()         { *m = TickerRequest{} }
func (m *TickerRequest) String() string { return proto.CompactTextString(m) }
func (*TickerRequest) ProtoMessage()    {}
func (*TickerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa8a912ee610f1a, []int{2}
}

func (m *TickerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TickerRequest.Unmarshal(m, b)
}
func (m *TickerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TickerRequest.Marshal(b, m, deterministic)
}
func (m *TickerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TickerRequest.Merge(m, src)
}
func (m *TickerRequest) XXX_Size() int {
	return xxx_messageInfo_TickerRequest.Size(m)
}
func (m *TickerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TickerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TickerRequest proto.InternalMessageInfo

func (m *TickerRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

type Ticker struct {
	Market               string   `protobuf:"bytes,1,opt,name=Market,proto3" json:"Market,omitempty"`
	MaxBid               string   `protobuf:"bytes,2,opt,name=MaxBid,proto3" json:"MaxBid,omitempty"`
	MinAsk               string   `protobuf:"bytes,3,opt,name=MinAsk,proto3" json:"MinAsk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ticker) Reset()         { *m = Ticker{} }
func (m *Ticker) String() string { return proto.CompactTextString(m) }
func (*Ticker) ProtoMessage()    {}
func (*Ticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa8a912ee610f1a, []int{3}
}

func (m *Ticker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticker.Unmarshal(m, b)
}
func (m *Ticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticker.Marshal(b, m, deterministic)
}
func (m *Ticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticker.Merge(m, src)
}
func (m *Ticker) XXX_Size() int {
	return xxx_messageInfo_Ticker.Size(m)
}
func (m *Ticker) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticker.DiscardUnknown(m)
}

var xxx_messageInfo_Ticker proto.InternalMessageInfo

func (m *Ticker) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Ticker) GetMaxBid() string {
	if m != nil {
		return m.MaxBid
	}
	return ""
}

func (m *Ticker) GetMinAsk() string {
	if m != nil {
		return m.MinAsk
	}
	return ""
}

func init() {
	proto.RegisterType((*SpreadPriceRequest)(nil), "pb.SpreadPriceRequest")
	proto.RegisterType((*SpreadPrice)(nil), "pb.SpreadPrice")
	proto.RegisterType((*TickerRequest)(nil), "pb.TickerRequest")
	proto.RegisterType((*Ticker)(nil), "pb.Ticker")
}

func init() { proto.RegisterFile("gdax.proto", fileDescriptor_efa8a912ee610f1a) }

var fileDescriptor_efa8a912ee610f1a = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4f, 0x49, 0xac,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x0a, 0xe3, 0x12, 0x0a, 0x2e,
	0x28, 0x4a, 0x4d, 0x4c, 0x09, 0x28, 0xca, 0x4c, 0x4e, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0x12, 0xe3, 0x62, 0xf3, 0x4d, 0x2c, 0xca, 0x4e, 0x2d, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0,
	0x0c, 0x82, 0xf2, 0x84, 0x84, 0xb8, 0x58, 0x82, 0x33, 0x53, 0x52, 0x25, 0x98, 0xc0, 0xa2, 0x60,
	0xb6, 0x90, 0x08, 0x17, 0xab, 0x4b, 0x6a, 0x41, 0x49, 0x86, 0x04, 0x33, 0x58, 0x10, 0xc2, 0x51,
	0xb2, 0xe6, 0xe2, 0x46, 0x32, 0x17, 0xa7, 0x81, 0x22, 0x5c, 0xac, 0x60, 0x05, 0x50, 0x13, 0x21,
	0x1c, 0x25, 0x75, 0x2e, 0xde, 0x90, 0xcc, 0xe4, 0xec, 0xd4, 0x22, 0x02, 0xee, 0x51, 0x0a, 0xe0,
	0x62, 0x83, 0x28, 0xc4, 0x69, 0x01, 0x58, 0xbc, 0xc2, 0x29, 0x33, 0x05, 0x6a, 0x03, 0x94, 0x07,
	0x16, 0xcf, 0xcc, 0x73, 0x2c, 0xce, 0x86, 0x3a, 0x1b, 0xca, 0x33, 0x0a, 0x44, 0x09, 0x8f, 0xe0,
	0xd4, 0xa2, 0x32, 0x90, 0xf3, 0xad, 0xb9, 0xf8, 0xdc, 0x53, 0x4b, 0x50, 0x3c, 0xa4, 0x57, 0x90,
	0xa4, 0x87, 0x19, 0x72, 0x52, 0xfc, 0x68, 0xe2, 0x4a, 0x0c, 0x46, 0xb6, 0x30, 0xdf, 0xc0, 0x4c,
	0xd3, 0xe1, 0xe2, 0x74, 0x4f, 0x2d, 0x81, 0x3a, 0x5c, 0x10, 0xa4, 0x01, 0xc5, 0xb7, 0x52, 0x5c,
	0x08, 0x21, 0x25, 0x86, 0x24, 0x36, 0x70, 0x64, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x90,
	0x4d, 0xeb, 0xc0, 0xba, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// = grpc.SupportPackageIsVersion4

// SpreadPriceServiceClient is the client API for SpreadPriceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpreadPriceServiceClient interface {
	GetSpreadPrice(ctx context.Context, in *SpreadPriceRequest, opts ...grpc.CallOption) (*SpreadPrice, error)
}

type spreadPriceServiceClient struct {
	cc *grpc.ClientConn
}

func NewSpreadPriceServiceClient(cc *grpc.ClientConn) SpreadPriceServiceClient {
	return &spreadPriceServiceClient{cc}
}

func (c *spreadPriceServiceClient) GetSpreadPrice(ctx context.Context, in *SpreadPriceRequest, opts ...grpc.CallOption) (*SpreadPrice, error) {
	out := new(SpreadPrice)
	err := c.cc.Invoke(ctx, "/pb.SpreadPriceService/GetSpreadPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpreadPriceServiceServer is the server API for SpreadPriceService service.
type SpreadPriceServiceServer interface {
	GetSpreadPrice(context.Context, *SpreadPriceRequest) (*SpreadPrice, error)
}

// UnimplementedSpreadPriceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSpreadPriceServiceServer struct {
}

func (*UnimplementedSpreadPriceServiceServer) GetSpreadPrice(ctx context.Context, req *SpreadPriceRequest) (*SpreadPrice, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpreadPrice not implemented")
}

func RegisterSpreadPriceServiceServer(s *grpc.Server, srv SpreadPriceServiceServer) {
	s.RegisterService(&_SpreadPriceService_serviceDesc, srv)
}

func _SpreadPriceService_GetSpreadPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpreadPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpreadPriceServiceServer).GetSpreadPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpreadPriceService/GetSpreadPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpreadPriceServiceServer).GetSpreadPrice(ctx, req.(*SpreadPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpreadPriceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SpreadPriceService",
	HandlerType: (*SpreadPriceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSpreadPrice",
			Handler:    _SpreadPriceService_GetSpreadPrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gdax.proto",
}

// TickerServiceClient is the client API for TickerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TickerServiceClient interface {
	GetTicker(ctx context.Context, in *TickerRequest, opts ...grpc.CallOption) (*Ticker, error)
}

type tickerServiceClient struct {
	cc *grpc.ClientConn
}

func NewTickerServiceClient(cc *grpc.ClientConn) TickerServiceClient {
	return &tickerServiceClient{cc}
}

func (c *tickerServiceClient) GetTicker(ctx context.Context, in *TickerRequest, opts ...grpc.CallOption) (*Ticker, error) {
	out := new(Ticker)
	err := c.cc.Invoke(ctx, "/pb.TickerService/GetTicker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TickerServiceServer is the server API for TickerService service.
type TickerServiceServer interface {
	GetTicker(context.Context, *TickerRequest) (*Ticker, error)
}

// UnimplementedTickerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTickerServiceServer struct {
}

func (*UnimplementedTickerServiceServer) GetTicker(ctx context.Context, req *TickerRequest) (*Ticker, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTicker not implemented")
}

func RegisterTickerServiceServer(s *grpc.Server, srv TickerServiceServer) {
	s.RegisterService(&_TickerService_serviceDesc, srv)
}

func _TickerService_GetTicker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TickerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TickerServiceServer).GetTicker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TickerService/GetTicker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TickerServiceServer).GetTicker(ctx, req.(*TickerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TickerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TickerService",
	HandlerType: (*TickerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTicker",
			Handler:    _TickerService_GetTicker_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gdax.proto",
}
